{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file://G%3A/PORTFOLIO/portfolio/src/lib/redis.ts"],"sourcesContent":["import Redis, { RedisOptions } from 'ioredis';\r\n\r\n/**\r\n * Redis connection URL from environment variables.\r\n * @throws {Error} If REDIS_URL is not set.\r\n */\r\nconst redisUrl = process.env.REDIS_URL;\r\n\r\nif (!redisUrl) {\r\n    throw new Error('Redis configuration error: REDIS_URL is required');\r\n}\r\n\r\n/**\r\n * Redis client configuration options.\r\n * Includes:\r\n * - Automatic reconnection with exponential backoff (max 2s delay)\r\n * - 20 max retries per request\r\n * - 5s connection timeout\r\n * - 10s keepalive\r\n * - TLS support for 'rediss://' URLs\r\n */\r\nconst redisOptions: RedisOptions = {\r\n    retryStrategy: (times) => Math.min(times * 50, 2000),\r\n    maxRetriesPerRequest: 20,\r\n    connectTimeout: 5000,\r\n    keepAlive: 10000,\r\n    tls: redisUrl.startsWith('rediss://') ? { rejectUnauthorized: false } : undefined,\r\n};\r\n\r\n/**\r\n * Redis client instance with:\r\n * - Pre-configured connection options\r\n * - Event listeners for connection lifecycle\r\n * - Graceful shutdown on SIGTERM\r\n *\r\n * @event connect - Successful TCP connection\r\n * @event ready - Ready to accept commands\r\n * @event error - Connection error\r\n * @event close - Connection closed\r\n * @event reconnecting - Reconnection attempt\r\n */\r\nexport const redis = new Redis(redisUrl, redisOptions);\r\n\r\n// Connection event listeners\r\nredis\r\n    .on('connect', () => console.log('‚úÖ Redis connected'))\r\n    .on('ready', () => console.log('üöÄ Redis ready'))\r\n    .on('error', (err) => console.error('‚ùå Redis error:', err))\r\n    .on('close', () => console.warn('üîå Redis connection closed'))\r\n    .on('reconnecting', () => console.log('üîÅ Redis reconnecting...'));\r\n\r\n/**\r\n * Graceful shutdown handler.\r\n * Closes Redis connection on SIGTERM signal.\r\n */\r\nprocess.on('SIGTERM', () => {\r\n    redis.quit().then(() => console.log('Redis gracefully terminated'));\r\n});\r\n"],"names":[],"mappings":";;;AAAA;;AAEA;;;CAGC,GACD,MAAM,WAAW,QAAQ,GAAG,CAAC,SAAS;AAEtC,IAAI,CAAC,UAAU;IACX,MAAM,IAAI,MAAM;AACpB;AAEA;;;;;;;;CAQC,GACD,MAAM,eAA6B;IAC/B,eAAe,CAAC,QAAU,KAAK,GAAG,CAAC,QAAQ,IAAI;IAC/C,sBAAsB;IACtB,gBAAgB;IAChB,WAAW;IACX,KAAK,SAAS,UAAU,CAAC,eAAe;QAAE,oBAAoB;IAAM,IAAI;AAC5E;AAcO,MAAM,QAAQ,IAAI,2IAAA,CAAA,UAAK,CAAC,UAAU;AAEzC,6BAA6B;AAC7B,MACK,EAAE,CAAC,WAAW,IAAM,QAAQ,GAAG,CAAC,sBAChC,EAAE,CAAC,SAAS,IAAM,QAAQ,GAAG,CAAC,mBAC9B,EAAE,CAAC,SAAS,CAAC,MAAQ,QAAQ,KAAK,CAAC,kBAAkB,MACrD,EAAE,CAAC,SAAS,IAAM,QAAQ,IAAI,CAAC,+BAC/B,EAAE,CAAC,gBAAgB,IAAM,QAAQ,GAAG,CAAC;AAE1C;;;CAGC,GACD,QAAQ,EAAE,CAAC,WAAW;IAClB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAM,QAAQ,GAAG,CAAC;AACxC","debugId":null}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["file://G%3A/PORTFOLIO/portfolio/src/lib/token/config.ts"],"sourcesContent":["// lib/token/config.ts\r\nexport const tokenConfig = {\r\n    algorithm: 'HS256' as const,\r\n    expiration: parseInt(process.env.TOKEN_EXPIRATION || '600'), // –≤ —Å–µ–∫—É–Ω–¥–∞—Ö\r\n    redisExpiration: parseInt(process.env.REDIS_EXPIRATION || '600'),\r\n    rateLimitWindow: parseInt(process.env.RATE_LIMIT_WINDOW || '60'),\r\n    rateLimitMaxRequests: parseInt(process.env.RATE_LIMIT_MAX_REQUESTS || '10')\r\n};\r\n"],"names":[],"mappings":"AAAA,sBAAsB;;;;AACf,MAAM,cAAc;IACvB,WAAW;IACX,YAAY,SAAS,QAAQ,GAAG,CAAC,gBAAgB,IAAI;IACrD,iBAAiB,SAAS,QAAQ,GAAG,CAAC,gBAAgB,IAAI;IAC1D,iBAAiB,SAAS,QAAQ,GAAG,CAAC,iBAAiB,IAAI;IAC3D,sBAAsB,SAAS,QAAQ,GAAG,CAAC,uBAAuB,IAAI;AAC1E","debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file://G%3A/PORTFOLIO/portfolio/src/lib/token/generate.ts"],"sourcesContent":["import { NextRequest } from 'next/server';\r\nimport { redis } from '@/lib/redis';\r\nimport jwt, { SignOptions } from 'jsonwebtoken';\r\nimport { randomUUID } from 'crypto';\r\nimport { isIP } from 'net';\r\nimport { tokenConfig } from './config';\r\n\r\nexport async function generateContactToken(req: NextRequest): Promise<string> {\r\n    const ipHeader = req.headers.get('x-real-ip') ||\r\n        req.headers.get('x-forwarded-for')?.split(',')[0].trim() ||\r\n        'unknown';\r\n    const ip = isIP(ipHeader) ? ipHeader : 'invalid';\r\n\r\n    if (ip === 'invalid') {\r\n        throw new Error('Invalid IP address');\r\n    }\r\n\r\n    // Rate-limiting –ø—Ä–æ–≤–µ—Ä–∫–∞\r\n    const redisRateLimitKey = `rate_limit:contact_token:${ip}`;\r\n    const currentCount = await redis.incr(redisRateLimitKey);\r\n\r\n    if (currentCount === 1) {\r\n        await redis.expire(redisRateLimitKey, tokenConfig.rateLimitWindow);\r\n    }\r\n\r\n    const isTrustedIP = process.env.TRUSTED_IPS?.split(',').includes(ip);\r\n    if (!isTrustedIP && currentCount > tokenConfig.rateLimitMaxRequests) {\r\n        await redis.expire(redisRateLimitKey, tokenConfig.rateLimitWindow * 2);\r\n        throw new Error('Too many token generation requests');\r\n    }\r\n\r\n    const jti = randomUUID();\r\n    const payload = {\r\n        jti,\r\n        iss: 'contact-service',\r\n        aud: ['contact-form', 'web-app'],\r\n        iat: Math.floor(Date.now() / 1000),\r\n        ip\r\n    };\r\n\r\n    if (!process.env.JWT_SECRET) {\r\n        throw new Error('JWT_SECRET is not configured');\r\n    }\r\n\r\n    const signOptions: SignOptions = {\r\n        expiresIn: tokenConfig.expiration,\r\n        algorithm: tokenConfig.algorithm,\r\n    };\r\n\r\n    const token = jwt.sign(payload, process.env.JWT_SECRET, signOptions);\r\n\r\n    await redis.set(`contact_token:${jti}`, JSON.stringify({\r\n        status: 'valid',\r\n        createdAt: new Date().toISOString(),\r\n        ip,\r\n        userAgent: req.headers.get('user-agent') || 'unknown',\r\n        rateLimitCount: currentCount\r\n    }), 'EX', tokenConfig.redisExpiration);\r\n\r\n    return token;\r\n}\r\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AACA;AACA;;;;;;AAEO,eAAe,qBAAqB,GAAgB;IACvD,MAAM,WAAW,IAAI,OAAO,CAAC,GAAG,CAAC,gBAC7B,IAAI,OAAO,CAAC,GAAG,CAAC,oBAAoB,MAAM,IAAI,CAAC,EAAE,CAAC,UAClD;IACJ,MAAM,KAAK,CAAA,GAAA,+FAAA,CAAA,OAAI,AAAD,EAAE,YAAY,WAAW;IAEvC,IAAI,OAAO,WAAW;QAClB,MAAM,IAAI,MAAM;IACpB;IAEA,yBAAyB;IACzB,MAAM,oBAAoB,CAAC,yBAAyB,EAAE,IAAI;IAC1D,MAAM,eAAe,MAAM,qHAAA,CAAA,QAAK,CAAC,IAAI,CAAC;IAEtC,IAAI,iBAAiB,GAAG;QACpB,MAAM,qHAAA,CAAA,QAAK,CAAC,MAAM,CAAC,mBAAmB,+HAAA,CAAA,cAAW,CAAC,eAAe;IACrE;IAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW,EAAE,MAAM,KAAK,SAAS;IACjE,IAAI,CAAC,eAAe,eAAe,+HAAA,CAAA,cAAW,CAAC,oBAAoB,EAAE;QACjE,MAAM,qHAAA,CAAA,QAAK,CAAC,MAAM,CAAC,mBAAmB,+HAAA,CAAA,cAAW,CAAC,eAAe,GAAG;QACpE,MAAM,IAAI,MAAM;IACpB;IAEA,MAAM,MAAM,CAAA,GAAA,qGAAA,CAAA,aAAU,AAAD;IACrB,MAAM,UAAU;QACZ;QACA,KAAK;QACL,KAAK;YAAC;YAAgB;SAAU;QAChC,KAAK,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK;QAC7B;IACJ;IAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,UAAU,EAAE;QACzB,MAAM,IAAI,MAAM;IACpB;IAEA,MAAM,cAA2B;QAC7B,WAAW,+HAAA,CAAA,cAAW,CAAC,UAAU;QACjC,WAAW,+HAAA,CAAA,cAAW,CAAC,SAAS;IACpC;IAEA,MAAM,QAAQ,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC,SAAS,QAAQ,GAAG,CAAC,UAAU,EAAE;IAExD,MAAM,qHAAA,CAAA,QAAK,CAAC,GAAG,CAAC,CAAC,cAAc,EAAE,KAAK,EAAE,KAAK,SAAS,CAAC;QACnD,QAAQ;QACR,WAAW,IAAI,OAAO,WAAW;QACjC;QACA,WAAW,IAAI,OAAO,CAAC,GAAG,CAAC,iBAAiB;QAC5C,gBAAgB;IACpB,IAAI,MAAM,+HAAA,CAAA,cAAW,CAAC,eAAe;IAErC,OAAO;AACX","debugId":null}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":["file://G%3A/PORTFOLIO/portfolio/src/app/api/get-token/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport { generateContactToken } from '@/lib/token/generate';\r\nimport { tokenConfig } from \"@/lib/token/config\";\r\n\r\n// –ö–∞—Å—Ç–æ–º–Ω—ã–π —Ç–∏–ø –¥–ª—è –æ—à–∏–±–∫–∏\r\ntype AppError = Error & {\r\n    message: string;\r\n    code?: string;\r\n    statusCode?: number;\r\n};\r\n\r\nexport async function GET(request: NextRequest) {\r\n    try {\r\n        const token = await generateContactToken(request);\r\n        return NextResponse.json({ token }, {\r\n            headers: {\r\n                'Cache-Control': 'no-store',\r\n                'X-Content-Type-Options': 'nosniff'\r\n            }\r\n        });\r\n    } catch (error: unknown) {\r\n        console.error('Token generation failed:', error);\r\n\r\n        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ –æ–±—ä–µ–∫—Ç–æ–º Error\r\n        if (error instanceof Error) {\r\n            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º rate limit –æ—à–∏–±–∫—É\r\n            if (error.message === 'Too many token generation requests') {\r\n                return NextResponse.json(\r\n                    { error: 'Too many requests' },\r\n                    {\r\n                        status: 429,\r\n                        headers: { 'Retry-After': tokenConfig.rateLimitWindow.toString() }\r\n                    }\r\n                );\r\n            }\r\n\r\n            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥—Ä—É–≥–∏–µ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –æ—à–∏–±–∫–∏\r\n            return NextResponse.json(\r\n                { error: error.message || 'Token generation failed' },\r\n                { status: (error as AppError).statusCode || 500 }\r\n            );\r\n        }\r\n\r\n        // –§–æ–ª–±—ç–∫ –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –æ—à–∏–±–æ–∫\r\n        return NextResponse.json(\r\n            { error: 'Internal Server Error' },\r\n            { status: 500 }\r\n        );\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AASO,eAAe,IAAI,OAAoB;IAC1C,IAAI;QACA,MAAM,QAAQ,MAAM,CAAA,GAAA,iIAAA,CAAA,uBAAoB,AAAD,EAAE;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;QAAM,GAAG;YAChC,SAAS;gBACL,iBAAiB;gBACjB,0BAA0B;YAC9B;QACJ;IACJ,EAAE,OAAO,OAAgB;QACrB,QAAQ,KAAK,CAAC,4BAA4B;QAE1C,+CAA+C;QAC/C,IAAI,iBAAiB,OAAO;YACxB,iCAAiC;YACjC,IAAI,MAAM,OAAO,KAAK,sCAAsC;gBACxD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACpB;oBAAE,OAAO;gBAAoB,GAC7B;oBACI,QAAQ;oBACR,SAAS;wBAAE,eAAe,+HAAA,CAAA,cAAW,CAAC,eAAe,CAAC,QAAQ;oBAAG;gBACrE;YAER;YAEA,uCAAuC;YACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACpB;gBAAE,OAAO,MAAM,OAAO,IAAI;YAA0B,GACpD;gBAAE,QAAQ,AAAC,MAAmB,UAAU,IAAI;YAAI;QAExD;QAEA,gCAAgC;QAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACpB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAEtB;AACJ","debugId":null}}]
}