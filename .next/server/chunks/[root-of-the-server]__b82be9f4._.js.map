{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file://G%3A/PORTFOLIO/portfolio/src/lib/redis.ts"],"sourcesContent":["import Redis, { RedisOptions } from 'ioredis';\r\n\r\nconst redisUrl = process.env.REDIS_URL;\r\n\r\nif (!redisUrl) {\r\n    throw new Error('Redis configuration error: REDIS_URL is required');\r\n}\r\n\r\nconst redisOptions: RedisOptions = {\r\n    retryStrategy: (times) => Math.min(times * 50, 2000),\r\n    maxRetriesPerRequest: 20,\r\n    connectTimeout: 5000,\r\n    keepAlive: 10000,\r\n    tls: redisUrl.startsWith('rediss://') ? { rejectUnauthorized: false } : undefined,\r\n};\r\n\r\nexport const redis = new Redis(redisUrl, redisOptions);\r\n\r\nredis\r\n    .on('connect', () => console.log('‚úÖ Redis connected'))\r\n    .on('ready', () => console.log('üöÄ Redis ready'))\r\n    .on('error', (err) => console.error('‚ùå Redis error:', err))\r\n    .on('close', () => console.warn('üîå Redis connection closed'))\r\n    .on('reconnecting', () => console.log('üîÅ Redis reconnecting...'));\r\n\r\n// Graceful shutdown\r\nprocess.on('SIGTERM', () => {\r\n    redis.quit().then(() => console.log('Redis gracefully terminated'));\r\n});\r\n\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,WAAW,QAAQ,GAAG,CAAC,SAAS;AAEtC,IAAI,CAAC,UAAU;IACX,MAAM,IAAI,MAAM;AACpB;AAEA,MAAM,eAA6B;IAC/B,eAAe,CAAC,QAAU,KAAK,GAAG,CAAC,QAAQ,IAAI;IAC/C,sBAAsB;IACtB,gBAAgB;IAChB,WAAW;IACX,KAAK,SAAS,UAAU,CAAC,eAAe;QAAE,oBAAoB;IAAM,IAAI;AAC5E;AAEO,MAAM,QAAQ,IAAI,2IAAA,CAAA,UAAK,CAAC,UAAU;AAEzC,MACK,EAAE,CAAC,WAAW,IAAM,QAAQ,GAAG,CAAC,sBAChC,EAAE,CAAC,SAAS,IAAM,QAAQ,GAAG,CAAC,mBAC9B,EAAE,CAAC,SAAS,CAAC,MAAQ,QAAQ,KAAK,CAAC,kBAAkB,MACrD,EAAE,CAAC,SAAS,IAAM,QAAQ,IAAI,CAAC,+BAC/B,EAAE,CAAC,gBAAgB,IAAM,QAAQ,GAAG,CAAC;AAE1C,oBAAoB;AACpB,QAAQ,EAAE,CAAC,WAAW;IAClB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAM,QAAQ,GAAG,CAAC;AACxC","debugId":null}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":["file://G%3A/PORTFOLIO/portfolio/src/app/api/get-token/route.ts"],"sourcesContent":["import {NextResponse} from 'next/server';\r\nimport {redis} from '@/lib/redis';\r\nimport jwt from 'jsonwebtoken';\r\nimport {randomUUID} from 'crypto';\r\n\r\nconst JWT_ALGORITHM = 'HS256';\r\nconst TOKEN_EXPIRATION = '10m';\r\nconst REDIS_EXPIRATION = 600; // 10 –º–∏–Ω—É—Ç –≤ —Å–µ–∫—É–Ω–¥–∞—Ö\r\n\r\nexport async function GET() {\r\n\r\n    try {\r\n        const jti = randomUUID();\r\n        const payload = {\r\n            jti,\r\n            iss: 'contact-service',\r\n            aud: 'contact-form'\r\n        };\r\n\r\n        const token = jwt.sign(payload, process.env.JWT_SECRET_KEY!, {\r\n            expiresIn: TOKEN_EXPIRATION,\r\n            algorithm: JWT_ALGORITHM,\r\n        });\r\n\r\n\r\n        await redis.set(`contact_token:${jti}`, JSON.stringify({\r\n            status: 'valid',\r\n            createdAt: Date.now()\r\n        }), 'EX', REDIS_EXPIRATION);\r\n\r\n        return NextResponse.json({ token });\r\n    } catch (error) {\r\n        console.error('Token generation error:', error);\r\n        return NextResponse.json(\r\n            { error: 'Internal Server Error' },\r\n            { status: 500 }\r\n        );\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAEA,MAAM,gBAAgB;AACtB,MAAM,mBAAmB;AACzB,MAAM,mBAAmB,KAAK,sBAAsB;AAE7C,eAAe;IAElB,IAAI;QACA,MAAM,MAAM,CAAA,GAAA,qGAAA,CAAA,aAAU,AAAD;QACrB,MAAM,UAAU;YACZ;YACA,KAAK;YACL,KAAK;QACT;QAEA,MAAM,QAAQ,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC,SAAS,QAAQ,GAAG,CAAC,cAAc,EAAG;YACzD,WAAW;YACX,WAAW;QACf;QAGA,MAAM,qHAAA,CAAA,QAAK,CAAC,GAAG,CAAC,CAAC,cAAc,EAAE,KAAK,EAAE,KAAK,SAAS,CAAC;YACnD,QAAQ;YACR,WAAW,KAAK,GAAG;QACvB,IAAI,MAAM;QAEV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;QAAM;IACrC,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACpB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAEtB;AACJ","debugId":null}}]
}