{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_e531dabc.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_e531dabc-module__QGiZLq__className\",\n  \"variable\": \"geist_e531dabc-module__QGiZLq__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_e531dabc.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_68a01160.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_mono_68a01160-module__YLcDdW__className\",\n  \"variable\": \"geist_mono_68a01160-module__YLcDdW__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_68a01160.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,0JAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,0JAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,0JAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file://G%3A/PORTFOLIO/portfolio/src/app/%5Blang%5D/layout.tsx"],"sourcesContent":["import type {Metadata} from \"next\";\nimport {Geist, Geist_Mono} from \"next/font/google\";\nimport \"../../style/globals.css\"\nimport {ThemeProvider} from \"next-themes\";\nimport {DictionaryProvider} from \"@/app/i18n/DictionaryContext\";\nimport {getDictionary} from '@/app/i18n/get-dictionary';\nimport React from \"react\";\nimport {notFound} from \"next/navigation\";\nimport {headers} from 'next/headers';\nimport {Toaster} from \"sonner\";\n\n\nexport async function generateStaticParams() {\n    return [{ lang: 'en' }, { lang: 'ru' }];\n}\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nexport const metadata: Metadata = {\n  title: \"Create Next App\",\n  description: \"Generated by create next app\",\n};\n\nexport default async function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n    const headersList = await  headers();\n    const langFromHeader = headersList.get('x-current-locale');\n    const path = headersList.get('x-invoke-path') || headersList.get('x-matched-path') || '';\n    const lang = langFromHeader || path?.split('/')[1];\n    if (!['en', 'ru'].includes(lang || '')) {\n        notFound();\n    }\n\n\n\n  return (\n    <html lang={lang} suppressHydrationWarning>\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n      <ThemeProvider attribute=\"class\" defaultTheme=\"system\" enableSystem>\n\n              {children}\n              <Toaster />\n\n      </ThemeProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;AAGA;AAIA;AAAA;AACA;AACA;;;;;;;;;AAGO,eAAe;IAClB,OAAO;QAAC;YAAE,MAAM;QAAK;QAAG;YAAE,MAAM;QAAK;KAAE;AAC3C;AAYO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,eAAe,WAAW,EACvC,QAAQ,EAGT;IACG,MAAM,cAAc,MAAO,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IACjC,MAAM,iBAAiB,YAAY,GAAG,CAAC;IACvC,MAAM,OAAO,YAAY,GAAG,CAAC,oBAAoB,YAAY,GAAG,CAAC,qBAAqB;IACtF,MAAM,OAAO,kBAAkB,MAAM,MAAM,IAAI,CAAC,EAAE;IAClD,IAAI,CAAC;QAAC;QAAM;KAAK,CAAC,QAAQ,CAAC,QAAQ,KAAK;QACpC,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IACX;IAIF,qBACE,8OAAC;QAAK,MAAM;QAAM,wBAAwB;kBACxC,cAAA,8OAAC;YACC,WAAW,GAAG,yIAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,8IAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;sBAEtE,cAAA,8OAAC,gJAAA,CAAA,gBAAa;gBAAC,WAAU;gBAAQ,cAAa;gBAAS,YAAY;;oBAE1D;kCACD,8OAAC,wIAAA,CAAA,UAAO;;;;;;;;;;;;;;;;;;;;;AAMtB","debugId":null}}]
}