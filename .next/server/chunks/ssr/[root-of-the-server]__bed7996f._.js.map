{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_e531dabc.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_e531dabc-module__QGiZLq__className\",\n  \"variable\": \"geist_e531dabc-module__QGiZLq__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_e531dabc.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_68a01160.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_mono_68a01160-module__YLcDdW__className\",\n  \"variable\": \"geist_mono_68a01160-module__YLcDdW__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_68a01160.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,0JAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,0JAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,0JAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file://G%3A/PORTFOLIO/portfolio/src/app/i18n/DictionaryContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DictionaryContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call DictionaryContext() from the server but DictionaryContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/i18n/DictionaryContext.tsx <module evaluation>\",\n    \"DictionaryContext\",\n);\nexport const DictionaryProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call DictionaryProvider() from the server but DictionaryProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/i18n/DictionaryContext.tsx <module evaluation>\",\n    \"DictionaryProvider\",\n);\nexport const useDictionary = registerClientReference(\n    function() { throw new Error(\"Attempted to call useDictionary() from the server but useDictionary is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/i18n/DictionaryContext.tsx <module evaluation>\",\n    \"useDictionary\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oEACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,oEACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,oEACA","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file://G%3A/PORTFOLIO/portfolio/src/app/i18n/DictionaryContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DictionaryContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call DictionaryContext() from the server but DictionaryContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/i18n/DictionaryContext.tsx\",\n    \"DictionaryContext\",\n);\nexport const DictionaryProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call DictionaryProvider() from the server but DictionaryProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/i18n/DictionaryContext.tsx\",\n    \"DictionaryProvider\",\n);\nexport const useDictionary = registerClientReference(\n    function() { throw new Error(\"Attempted to call useDictionary() from the server but useDictionary is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/i18n/DictionaryContext.tsx\",\n    \"useDictionary\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,gDACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,gDACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,gDACA","debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file://G%3A/PORTFOLIO/portfolio/src/app/i18n/get-dictionary.ts"],"sourcesContent":["import 'server-only'\r\nimport {AppDictionary} from \"@/types/dictionary\";\r\n\r\nconst dictionaries = {\r\n    en: () => import('../[lang]/dictionaries/en.json').then((module) => module.default),\r\n    ru: () => import('../[lang]/dictionaries/ru.json').then((module) => module.default),\r\n}\r\n\r\nexport const getDictionary = async (locale: 'en' | 'ru') :Promise<AppDictionary> =>\r\n    dictionaries[locale]?.() ?? dictionaries.en()\r\n"],"names":[],"mappings":";;;AAAA;;AAGA,MAAM,eAAe;IACjB,IAAI,IAAM,uHAAyC,IAAI,CAAC,CAAC,SAAW,OAAO,OAAO;IAClF,IAAI,IAAM,uHAAyC,IAAI,CAAC,CAAC,SAAW,OAAO,OAAO;AACtF;AAEO,MAAM,gBAAgB,OAAO,SAChC,YAAY,CAAC,OAAO,QAAQ,aAAa,EAAE","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file://G%3A/PORTFOLIO/portfolio/src/app/%5Blang%5D/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport \"../../style/globals.css\";\nimport { ThemeProvider } from \"next-themes\";\nimport { DictionaryProvider } from \"@/app/i18n/DictionaryContext\";\nimport { getDictionary } from '@/app/i18n/get-dictionary';\nimport React from \"react\";\nimport { notFound } from \"next/navigation\";\nimport { headers } from 'next/headers';\nimport { Toaster } from \"sonner\";\n\nexport async function generateStaticParams() {\n    return [{ lang: 'en' }, { lang: 'ru' }];\n}\n\nconst geistSans = Geist({\n    variable: \"--font-geist-sans\",\n    subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n    variable: \"--font-geist-mono\",\n    subsets: [\"latin\"],\n});\n\n// Конфиг для метаданных\nconst SITE_URL = \"https://yourdomain.com\";\nconst DEFAULT_OG_IMAGE = `${SITE_URL}/og-default.jpg`;\n\nexport async function generateMetadata(): Promise<Metadata> {\n    const headersList = await headers();\n    const lang = headersList.get('x-current-locale') || 'ru';\n    const path = headersList.get('x-invoke-path') || '';\n\n    const title = {\n        ru: \"Антон Шага | Frontend-разработчик\",\n        en: \"Anton Shaga | Frontend Developer\"\n    };\n\n    const description = {\n        ru: \"Создаю современные веб-приложения на Next.js и TypeScript\",\n        en: \"Building modern web apps with Next.js and TypeScript\"\n    };\n\n    return {\n        title: title[lang as 'ru' | 'en'],\n        description: description[lang as 'ru' | 'en'],\n        metadataBase: new URL(SITE_URL),\n        alternates: {\n            canonical: `${SITE_URL}/${lang}${path}`,\n            languages: {\n                'ru': `${SITE_URL}/ru${path}`,\n                'en': `${SITE_URL}/en${path}`,\n            },\n        },\n        openGraph: {\n            title: title[lang as 'ru' | 'en'],\n            description: description[lang as 'ru' | 'en'],\n            url: `${SITE_URL}/${lang}${path}`,\n            siteName: \"Anton Shaga Portfolio\",\n            images: [{\n                url: DEFAULT_OG_IMAGE,\n                width: 1200,\n                height: 630,\n                alt: title[lang as 'ru' | 'en'],\n            }],\n            locale: lang === 'ru' ? 'ru_RU' : 'en_US',\n            type: 'website',\n        },\n        twitter: {\n            card: 'summary_large_image',\n            title: title[lang as 'ru' | 'en'],\n            description: description[lang as 'ru' | 'en'],\n            images: [DEFAULT_OG_IMAGE],\n        },\n        robots: {\n            index: true,\n            follow: true,\n            googleBot: {\n                index: true,\n                follow: true,\n            }\n        },\n    };\n}\n\nexport default async function RootLayout({\n                                             children,\n                                         }: {\n    children: React.ReactNode;\n}) {\n    const headersList = await headers();\n    const langFromHeader = headersList.get('x-current-locale');\n    const path = headersList.get('x-invoke-path') || headersList.get('x-matched-path') || '';\n    const lang = langFromHeader || path?.split('/')[1] || 'ru';\n\n    if (!['en', 'ru'].includes(lang)) {\n        notFound();\n    }\n\n    const dict = await getDictionary(lang as 'en' | 'ru');\n\n    // JSON-LD данные\n    const jsonLd = {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"Person\",\n        \"name\": lang === 'ru' ? \"Антон Шага\" : \"Anton Shaga\",\n        \"jobTitle\": \"Frontend Developer\",\n        \"url\": `${SITE_URL}/${lang}`,\n        \"sameAs\": [\n            \"https://github.com/yourusername\",\n            \"https://linkedin.com/in/yourprofile\"\n        ],\n        \"description\": lang === 'ru'\n            ? \"Фронтенд-разработчик специализирующийся на Next.js\"\n            : \"Frontend developer specializing in Next.js\"\n    };\n\n    return (\n        <html lang={lang} suppressHydrationWarning>\n        <head>\n            <script\n                type=\"application/ld+json\"\n                dangerouslySetInnerHTML={{ __html: JSON.stringify(jsonLd) }}\n            />\n        </head>\n        <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>\n        <ThemeProvider attribute=\"class\" defaultTheme=\"system\" enableSystem>\n            <DictionaryProvider dict={dict}>\n                {children}\n                <Toaster />\n            </DictionaryProvider>\n        </ThemeProvider>\n        </body>\n        </html>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}