{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\n\r\nconst PUBLIC_FILE = /\\.(.*)$/;\r\nconst locales = ['en', 'ru'];\r\nconst defaultLocale = 'en';\r\n\r\nfunction getLocale(request: NextRequest): string {\r\n    const acceptLanguage = request.headers.get('accept-language');\r\n    const lang = acceptLanguage?.split(',')?.[0]?.split('-')[0];\r\n    return locales.includes(lang || '') ? lang! : defaultLocale;\r\n}\r\n\r\nexport function middleware(request: NextRequest) {\r\n    const { pathname } = request.nextUrl;\r\n\r\n    // игнорируем public и API\r\n    if (\r\n        pathname.startsWith('/_next') ||\r\n        pathname.startsWith('/api') ||\r\n        PUBLIC_FILE.test(pathname)\r\n    ) {\r\n        return;\r\n    }\r\n\r\n    // уже содержит язык — не редиректим\r\n    if (locales.some((locale) => pathname.startsWith(`/${locale}`))) {\r\n        return;\r\n    }\r\n\r\n    const locale = getLocale(request);\r\n    request.nextUrl.pathname = `/${locale}${pathname}`;\r\n\r\n    return NextResponse.redirect(request.nextUrl);\r\n}\r\n\r\nexport const config = {\r\n    matcher: ['/((?!_next|api|favicon.ico).*)'],\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAEA,MAAM,cAAc;AACpB,MAAM,UAAU;IAAC;IAAM;CAAK;AAC5B,MAAM,gBAAgB;AAEtB,SAAS,UAAU,OAAoB;IACnC,MAAM,iBAAiB,QAAQ,OAAO,CAAC,GAAG,CAAC;IAC3C,MAAM,OAAO,gBAAgB,MAAM,MAAM,CAAC,EAAE,EAAE,MAAM,IAAI,CAAC,EAAE;IAC3D,OAAO,QAAQ,QAAQ,CAAC,QAAQ,MAAM,OAAQ;AAClD;AAEO,SAAS,WAAW,OAAoB;IAC3C,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IAEpC,0BAA0B;IAC1B,IACI,SAAS,UAAU,CAAC,aACpB,SAAS,UAAU,CAAC,WACpB,YAAY,IAAI,CAAC,WACnB;QACE;IACJ;IAEA,oCAAoC;IACpC,IAAI,QAAQ,IAAI,CAAC,CAAC,SAAW,SAAS,UAAU,CAAC,CAAC,CAAC,EAAE,QAAQ,IAAI;QAC7D;IACJ;IAEA,MAAM,SAAS,UAAU;IACzB,QAAQ,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,EAAE,SAAS,UAAU;IAElD,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,QAAQ,OAAO;AAChD;AAEO,MAAM,SAAS;IAClB,SAAS;QAAC;KAAiC;AAC/C"}}]
}